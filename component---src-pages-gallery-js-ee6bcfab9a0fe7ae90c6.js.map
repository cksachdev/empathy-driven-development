{"version":3,"sources":["webpack:///./src/components/carousel/carousel.js","webpack:///./src/pages/gallery.js"],"names":["Carousel","_ref","images","altTexts","_useState","useState","slideIndex","state","setState","lastIndex","length","labelTexts","changeSlide","n","prepLabel","num","imageName","rval","i","k","push","toString","react_default","a","createElement","className","aria-live","map","index","key","gatsby_image_default","fluid","node","childImageSharp","alt","onClick","bind","imageData","GalleryPage","render","data","this","props","layout","seo","title","carousel_carousel","gallery","edges","Component","imageQuery"],"mappings":"yKA0EeA,UArEE,SAAAC,GAAwB,IAAtBC,EAAsBD,EAAtBC,OAAQC,EAAcF,EAAdE,SAAcC,EACXC,mBAAS,CAAEC,WAAY,IAA1CC,EAD8BH,EAAA,GACvBI,EADuBJ,EAAA,GAE/BK,EAAYP,EAAOQ,OAAS,EAC9BC,EAAa,GAcXC,EAAe,SAACC,GAClBL,EAAS,CAACF,WAAYO,KAGpBC,EAAa,SAACC,EAAKC,GAErB,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,GAAKH,EAAKG,IACtBD,GAAcC,EAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAME,IACtBR,EAAWS,KAAX,GAAmBJ,GAEvB,OAAOL,EAAWU,YAGtB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKE,YAAU,UACdxB,EAAOyB,IAAI,SAACzB,EAAQ0B,GACjB,OAAON,EAAAC,EAAAC,cAAA,OACHK,IAAG,SAAWD,EACdH,WAAclB,EAAMD,aAAesB,EAArB,cAAL,oBAETN,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAKQ,MAAO7B,EAAO8B,KAAKC,gBAAgBF,MAAOG,IAAG,GAAKpB,EAAUc,EAAOzB,EAASyB,UAMzFN,EAAAC,EAAAC,cAAA,KAAGC,WAAmC,IAArBlB,EAAMD,WAAmB,SAAzB,IAAL,kBACR6B,QAzCO,WACX5B,EAAMD,WAAa,GACnBE,EAAS,CAACF,WAAYC,EAAMD,WAAa,MAsCzC,KAIAgB,EAAAC,EAAAC,cAAA,KAAGC,WAAclB,EAAMD,aAAeG,EAAY,SAAjC,IAAL,kBACR0B,QAxCO,WACX5B,EAAMD,WAAaG,GACnBD,EAAS,CAACF,WAAYC,EAAMD,WAAa,MAqCzC,KAMAgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVvB,EAAOyB,IAAI,SAACzB,EAAQ0B,GACjB,OAAON,EAAAC,EAAAC,cAAA,QACHK,IAAG,OAASD,EACZH,WAAclB,EAAMD,aAAesB,EAArB,cAAL,iBACTO,QAASvB,EAAYwB,YAAWR,oDC5DxD,IAAMS,EAAY,CACd,2CACA,4CACA,4CACA,sCACA,0BACA,yCACA,0CACA,kCACA,oDACA,6BAGEC,4FACFC,OAAA,WACI,IAAMC,EAAOC,KAAKC,MAAMF,KAExB,OACIlB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAKC,MAAM,YACXvB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACsB,EAAD,CAAU5C,OAAQsC,EAAKO,QAAQC,MAAO7C,SAAUkC,SARtCY,aAcbC,EAAU,aAiBRZ","file":"component---src-pages-gallery-js-ee6bcfab9a0fe7ae90c6.js","sourcesContent":["import React, { useState } from \"react\"\nimport Img from \"gatsby-image\"\n\nimport \"./carousel.css\"\n\nconst Carousel = ({images, altTexts}) => {\n    const [state, setState] = useState({ slideIndex: 0 })\n    const lastIndex = images.length - 1\n    let labelTexts = []\n\n    // Next/previous controls\n    const prevSlide = (() => {\n        if (state.slideIndex > 1) {\n            setState({slideIndex: state.slideIndex - 1 })\n        }\n    })\n    const nextSlide = (() => {\n        if (state.slideIndex < lastIndex) {\n            setState({slideIndex: state.slideIndex + 1 })\n        }\n    })\n    // Thumbnail image controls\n    const changeSlide = ((n) => {\n        setState({slideIndex: n})\n    })\n    // Labeling\n    const prepLabel = ((num, imageName) => {\n        let rval = 1\n        for (var i = 2; i <= num; i++)\n            rval = rval + i\n\n        for (var k = 0; k < rval; k++)\n            labelTexts.push(`${imageName}`)\n        \n        return labelTexts.toString()\n    })\n\n    return (\n        <div className=\"slideshow-container\">\n            <div aria-live=\"polite\">\n            {images.map((images, index) => {\n                return <div\n                    key={`image-${index}`}\n                    className={`${state.slideIndex === index ? `visible` : ``} slideshow-slide`}\n                >\n                    <Img fluid={images.node.childImageSharp.fluid} alt={`${prepLabel(index, altTexts[index])}`} />\n                </div>\n                })\n            }\n            </div>\n            {/* <!-- Next and previous buttons --> */}\n            <a className={`${state.slideIndex === 0 ? 'hidden' : `` } slideshow-prev`} \n                onClick={prevSlide}>\n                &#10094;\n            </a>\n            <a className={`${state.slideIndex === lastIndex ? 'hidden' : `` } slideshow-next`}\n                onClick={nextSlide}>\n                &#10095;\n            </a>\n\n            {/* <!-- The dots/circles --> */}\n            <div className=\"slideshow-dots\">\n                {images.map((images, index) => {\n                    return <span \n                        key={`dot-${index}`}\n                        className={`${state.slideIndex === index ? `current` : ``} slideshow-dot`}\n                        onClick={changeSlide.bind(this, index)}>\n                    </span>\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Carousel\n","import React, { Component } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Carousel from \"../components/carousel/carousel\"\n\nconst imageData = [\n    'Backpacking with Rainier the labradoodle',\n    'Camping with the dog at a wilderness lake',\n    'Carrying puppy Rainier on a mountain hike',\n    'Mt. Baker Wilderness at Chain Lakes',\n    'Skyline Lake reflection',\n    'Bagley the cat wants to go van camping',\n    'Sunny trail magic in the North Cascades',\n    'Snowy Iceberg the Adventure Van',\n    'Rainier in his snow suit in the Baker backcountry',\n    'My splitboard in the snow',\n]\n\nclass GalleryPage extends Component {\n    render() {\n        const data = this.props.data\n\n        return (\n            <Layout>\n                <SEO title=\"Gallery\" />\n                <h2>Inspiration</h2>\n                <Carousel images={data.gallery.edges} altTexts={imageData} />\n            </Layout>\n        )\n    }\n}\n\nexport const imageQuery = graphql`\n    query {\n        gallery: allFile(filter: { sourceInstanceName: { eq: \"gallery\" } }) {\n            edges {\n              node {\n                name\n                childImageSharp {\n                  fluid(maxWidth: 400, maxHeight: 400) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n        }\n    }\n`\n\nexport default GalleryPage\n"],"sourceRoot":""}